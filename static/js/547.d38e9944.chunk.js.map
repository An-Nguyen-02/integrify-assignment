{"version":3,"file":"static/js/547.d38e9944.chunk.js","mappings":"0QAOe,SAASA,EAAU,GAAmB,IAAjBC,EAAY,EAAZA,aAClC,OACE,UAACC,EAAA,EAAG,CAACC,GAAI,CACPC,gBAAiB,qBACjBC,QAAS,OACTC,QAAS,OACTC,eAAgB,iBAChB,WACA,SAACC,EAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,GAAE,sBAGjC,SAACC,EAAA,EAAS,CACRC,GAAG,4BACHC,MAAM,yBACNC,WAAY,CACVC,gBACE,SAACC,EAAA,EAAc,CAACC,SAAS,QAAO,UAC9B,SAACC,EAAA,EAAU,OAIjBT,QAAQ,WACRU,SAAYlB,EACZE,GAAM,CACJiB,MAAO,aAMjB,C,wJCnBA,SAASC,EAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,CACT,CAEA,SAASC,EAAcC,EAAOF,GAC5B,MAAiB,SAAVE,EACH,SAACJ,EAAGC,GAAC,OAAKF,EAAqBC,EAAGC,EAAGC,EAAQ,EAC7C,SAACF,EAAGC,GAAC,OAAMF,EAAqBC,EAAGC,EAAGC,EAAS,CACrD,CAIA,SAASG,EAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMG,KAAI,SAACC,EAAIC,GAAK,MAAK,CAACD,EAAIC,EAAM,IAQ3D,OAPAH,EAAeI,MAAK,SAACZ,EAAGC,GACtB,IAAMG,EAAQG,EAAWP,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVG,EACKA,EAEFJ,EAAE,GAAKC,EAAE,EAClB,IACOO,EAAeC,KAAI,SAACC,GAAE,OAAKA,EAAG,EAAE,GACzC,CAEA,IAAMG,EAAY,CAChB,CACEvB,GAAI,OACJwB,SAAS,EACTC,gBAAgB,EAChBxB,MAAO,QAET,CACED,GAAI,OACJwB,SAAS,EACTC,gBAAgB,EAChBxB,MAAO,QAET,CACED,GAAI,SACJwB,SAAS,EACTC,gBAAgB,EAChBxB,MAAO,UAET,CACED,GAAI,aACJwB,SAAS,EACTC,gBAAgB,EAChBxB,MAAO,cAET,CACED,GAAI,YACJwB,SAAS,EACTC,gBAAgB,EAChBxB,MAAO,aAET,CACED,GAAI,UACJwB,SAAS,EACTC,gBAAgB,EAChBxB,MAAO,KAIX,SAASyB,EAAkBC,GACzB,IAAQb,EACNa,EADMb,MAAOF,EACbe,EADaf,QAASgB,EACtBD,EADsBC,cAMxB,OACE,SAACC,EAAA,EAAS,WACR,SAACC,EAAA,EAAQ,UACNP,EAAUJ,KAAI,SAACY,GAAQ,OACtB,SAACC,EAAA,EAAS,CAERxB,MAAOuB,EAASP,QAAU,QAAU,OACpC/B,QAASsC,EAASN,eAAiB,OAAS,SAC5CQ,cAAerB,IAAYmB,EAAS/B,IAAKc,EAAc,UAEvD,UAACoB,EAAA,EAAc,CACbC,OAAQvB,IAAYmB,EAAS/B,GAC7BoC,UAAWxB,IAAYmB,EAAS/B,GAAKc,EAAQ,MAC7CuB,SAjBeC,EAiBYP,EAAS/B,GAjBR,SAACuC,GACvCX,EAAcW,EAAOD,EACvB,GAeoD,UAEvCP,EAAS9B,MACTW,IAAYmB,EAAS/B,IACpB,SAACV,EAAA,EAAG,CAACkD,UAAU,OAAOjD,GAAIkD,EAAAA,EAAe,SAC5B,SAAV3B,EAAmB,oBAAsB,qBAE1C,SAfDiB,EAAS/B,IATE,IAACsC,CA0BP,OAKtB,CAUe,SAASI,EAAa,GAAS,IAARC,EAAI,EAAJA,KACpC,EAA0BC,EAAAA,SAAe,OAAM,eAAxC9B,EAAK,KAAE+B,EAAQ,KACtB,EAA8BD,EAAAA,SAAe,YAAW,eAAjDhC,EAAO,KAAEkC,EAAU,KAC1B,EAAwBF,EAAAA,SAAe,GAAE,eAAlCG,EAAI,KAAEC,EAAO,KACpB,EAAsCJ,EAAAA,SAAe,GAAE,eAAhDK,EAAW,KAAEC,EAAc,KAE5BC,EAAoBP,EAAAA,aAAkB,SAACL,EAAOD,GAElDO,EADcjC,IAAY0B,GAAsB,QAAVxB,EACrB,OAAS,OAC1BgC,EAAWR,EACb,GAAE,CAACxB,EAAOF,IAEJwC,EAAmBR,EAAAA,aAAkB,SAACL,EAAOc,GACjDL,EAAQK,EACV,GAAE,IAEIC,EAA0BV,EAAAA,aAAkB,SAACL,GACjDW,EAAeK,SAAShB,EAAMiB,OAAOC,MAAO,KAC5CT,EAAQ,EACV,GAAE,IAGIU,EACJX,EAAO,EAAIY,KAAKC,IAAI,GAAI,EAAIb,GAAQE,EAAcN,EAAKkB,QAAU,EAEnE,OAEE,SAACvE,EAAA,EAAG,CAACC,GAAI,CAAEuE,MAAO,QAAS,UACzB,UAACC,EAAA,EAAK,CAACxE,GAAI,CAAEuE,MAAO,OAAQE,GAAI,GAAI,WAClC,SAACC,EAAA,EAAc,WACb,UAACC,EAAA,EAAK,CACJ3E,GAAI,CAAE4E,SAAU,KAChB,kBAAgB,aAChBC,KAAK,SAAQ,WAEb,SAAC1C,EAAiB,CAChBZ,MAAOA,EACPF,QAASA,EACTgB,cAAeuB,EACfkB,SAAU1B,EAAKkB,UAEjB,UAACS,EAAA,EAAS,WAGPvD,EAAW4B,EAAM9B,EAAcC,EAAOF,IACpC2D,MAAMxB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C9B,KAAI,SAACqD,EAAKnD,GACT,OACE,UAACS,EAAA,EAAQ,CACP2C,OAAK,EACLC,UAAW,EAAE,WAGb,SAAC1C,EAAA,EAAS,CAACxB,MAAM,OAAOsD,MAAO,IAAI,UACjC,gBACIa,IAAG,UAAOH,EAAII,KAAKC,OAAM,SACzBC,IAAG,UAAKN,EAAIO,MAAMC,KAClBlB,MAAO,KAAI,UACHU,EAAII,KAAKC,OAAM,aAG7B,SAAC7C,EAAA,EAAS,CAACxB,MAAM,OAAM,SAAEgE,EAAII,KAAKC,UAClC,SAAC7C,EAAA,EAAS,CAACxB,MAAM,OAAM,SAAEgE,EAAIS,UAC7B,SAACjD,EAAA,EAAS,CAACxB,MAAM,QAAO,SAAEgE,EAAIU,cAC9B,SAAClD,EAAA,EAAS,CAACxB,MAAM,QAAQsD,MAAO,IAAI,UAClC,SAACqB,EAAA,EAAI,UAEGC,OAAOC,OAAOb,EAAIc,WAAWnE,KAAI,SAACoE,GAC9B,OAAO,SAACC,EAAA,GAAQ,CAACxF,GAAIuF,EAAS,SAAyCA,GAAQ,UAAxCf,EAAII,KAAKC,OAAM,YAAIU,GAC9D,SAIV,SAACvD,EAAA,EAAS,CAACxB,MAAM,QAAO,UACtB,SAAC,KAAI,CAACiF,GAAIjB,EAAII,KAAKC,OAAOa,WAAWC,cAAc,UACjD,SAACC,EAAA,EAAU,WACP,SAACC,EAAA,EAAmB,YAzBvBrB,EAAII,KAAKC,OA+BpB,IACDnB,EAAY,IACX,SAAC5B,EAAA,EAAQ,CACPgE,MAAO,CACLC,OAAQ,IAAMrC,GACd,UAEF,SAAC1B,EAAA,EAAS,CAACgE,QAAS,eAM9B,SAACC,EAAA,EAAe,CACdC,mBAAoB,CAAC,EAAG,GAAI,IAC5B1D,UAAU,MACV2D,MAAOxD,EAAKkB,OACZZ,YAAaA,EACbF,KAAMA,EACNqD,aAAchD,EACdiD,oBAAqB/C,QAK/B,C,cCzOe,SAASgD,IACpB,OAA6BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjCC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAClB,GAAsCC,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAClC,GAAkDF,EAAAA,EAAAA,UAAS,IAAG,eAAvDG,EAAiB,KAAEC,EAAoB,MAE9CC,EAAAA,EAAAA,YAAU,WACDN,GAEHK,EAAqBN,EAAUQ,QAAO,SAAAC,GACpC,OAAOA,EAAQtC,KAAKC,OAAOa,WAAWC,cAAcwB,SAASP,EAAYjB,cAC3E,IAGN,GAAE,CAACc,EAAWG,EAAaF,IAE3B,IAAMU,GAAiBC,EAAAA,EAAAA,cAAY,SAACC,GAChCT,EAAeS,EAAE9D,OAAOC,MAC5B,GAAE,IAEF,OAAIiD,GACA,SAACa,EAAA,EAAO,KAGR,iBAAKC,UAAU,MAAK,WAClB,SAACpI,EAAS,CAACC,aAAgB+H,KAC3B,SAAC1E,EAAY,CAACC,KAAMmE,MAI9B,C","sources":["components/searchBox/SearchBox.js","components/countryTable/countryTable.js","routes/home/HomePage.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function SearchBox({ searchChange }) {\r\n  return (\r\n    <Box sx={{\r\n      backgroundColor: 'rgb(204, 204, 255)',\r\n      padding: '16px',\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n    }}>\r\n      <Typography variant=\"h4\" color=\"\">\r\n        Country\r\n      </Typography>\r\n      <TextField\r\n        id=\"input-with-icon-textfield\"\r\n        label=\"Search by country name\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        variant=\"standard\"\r\n        onChange = {searchChange}\r\n        sx = {{\r\n          align: 'right'\r\n        }}\r\n        \r\n      />\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Paper from '@mui/material/Paper';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { ListItem, List } from '@mui/material';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\nimport {Link} from 'react-router-dom'\r\n// sorting in the name column is not working\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'flag',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Flag',\r\n  },\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Name',\r\n  },\r\n  {\r\n    id: 'region',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Region',\r\n  },\r\n  {\r\n    id: 'population',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Population',\r\n  },\r\n  {\r\n    id: 'languages',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: 'Languages',\r\n  },\r\n  {\r\n    id: 'details',\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: ''\r\n  }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport default function CountryTable({rows}) {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = React.useCallback((event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  },[order, orderBy]);\r\n\r\n  const handleChangePage = React.useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  },[]);\r\n\r\n  const handleChangeRowsPerPage = React.useCallback((event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  },[]);\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size='medium'\r\n          >\r\n            <EnhancedTableHead\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.sort(getComparator(order, orderBy)).slice() */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.name.common}\r\n                    >\r\n                      <TableCell align=\"left\" width={400}>\r\n                        <img \r\n                            alt = {`${row.name.common}_flag`} \r\n                            src={`${row.flags.svg}`} \r\n                            width={300}\r\n                            key={`${row.name.common}_flag`} >\r\n                        </img>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.name.common}</TableCell>\r\n                      <TableCell align=\"left\">{row.region}</TableCell>\r\n                      <TableCell align=\"right\">{row.population}</TableCell>\r\n                      <TableCell align=\"right\" width={300}>\r\n                        <List>\r\n                            {\r\n                                Object.values(row.languages).map((language) => {\r\n                                    return <ListItem id={language} key={`${row.name.common}_${language}`}>{language}</ListItem>\r\n                                })\r\n                            }\r\n                        </List>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Link to={row.name.common.toString().toLowerCase()}>\r\n                          <IconButton>\r\n                              <ArrowForwardIosIcon />\r\n                          </IconButton>\r\n                        </Link>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: 120 * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}","import { useState, useEffect, useContext, useCallback} from 'react';\r\nimport {CountriesContext} from '../../contexts/countriesContext'\r\nimport SearchBox from '../../components/searchBox/SearchBox';\r\nimport CountryTable from '../../components/countryTable/countryTable';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nexport default function HomePage(){\r\n    const {countries, loading} = useContext(CountriesContext)\r\n    const [searchField, setSearchField] = useState('')\r\n    const [filteredCountries, setFilteredCountries] = useState([])\r\n\r\n    useEffect(()=>{\r\n        if (!loading){\r\n    \r\n          setFilteredCountries(countries.filter(country => {\r\n            return country.name.common.toString().toLowerCase().includes(searchField.toLowerCase())\r\n          }))\r\n        }\r\n    \r\n    },[countries, searchField, loading])\r\n    \r\n    const onSearchChange = useCallback((e) => {\r\n        setSearchField(e.target.value)\r\n    },[])\r\n\r\n    if (loading) return (\r\n        <Spinner />\r\n    ) \r\n    return (\r\n        <div className=\"App\">\r\n          <SearchBox searchChange = {onSearchChange}/>\r\n          <CountryTable rows={filteredCountries} />\r\n        </div>\r\n    );\r\n        \r\n}"],"names":["SearchBox","searchChange","Box","sx","backgroundColor","padding","display","justifyContent","Typography","variant","color","TextField","id","label","InputProps","startAdornment","InputAdornment","position","Search","onChange","align","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","EnhancedTableHead","props","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","direction","onClick","property","event","component","visuallyHidden","CountryTable","rows","React","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","max","length","width","Paper","mb","TableContainer","Table","minWidth","size","rowCount","TableBody","slice","row","hover","tabIndex","alt","name","common","src","flags","svg","region","population","List","Object","values","languages","language","ListItem","to","toString","toLowerCase","IconButton","ArrowForwardIos","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","HomePage","useContext","CountriesContext","countries","loading","useState","searchField","setSearchField","filteredCountries","setFilteredCountries","useEffect","filter","country","includes","onSearchChange","useCallback","e","Spinner","className"],"sourceRoot":""}